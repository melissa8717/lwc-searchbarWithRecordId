public with sharing class OppController {
    @AuraEnabled(cacheable=true)
    public static List<Opportunity> getOppList() {
        return [
            SELECT
                id,Opportunity.Name,Amount,StageName,CloseDate
            FROM Opportunity
            WHERE Picture__c != NULL
            WITH SECURITY_ENFORCED
            LIMIT 10
        ];
    }

    @AuraEnabled(cacheable=true)
    public static List<Opportunity> findOpp(String searchKey) {
        String key = '%' + searchKey + '%';
        return [
            SELECT id,Opportunity.Name,Amount,StageName,CloseDate
            FROM Opportunity
            WHERE Opportunity.Name LIKE :key 
        ];
    }

    @AuraEnabled(cacheable=true)
    public static Contact getSingleContact() {
        return [
            SELECT Id, Name, Title, Phone, Email, Picture__c
            FROM Contact
            WITH SECURITY_ENFORCED
            LIMIT 1
        ];
    }

    @AuraEnabled
    public static void updateContacts(List<Contact> contactsForUpdate) {
        // Make sure we can update the database before trying to update
        if (!Schema.sObjectType.Contact.isUpdateable()) {
            throw new SecurityException(
                'Insufficient permissions to update contacts'
            );
        }
        update contactsForUpdate;
    }

    @AuraEnabled
    public static void updateContact(
        Id recordId,
        String firstName,
        String lastName
    ) {
        Contact contact = new Contact(
            Id = recordId,
            FirstName = firstName,
            LastName = lastName
        );
        update contact;
    }
}